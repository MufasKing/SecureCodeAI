import os\n\n# Define the file path\nfile_path = os.path.join('/safe/', 'your_file.txt')\n\n# Open and read the file\ntry:\n    with open(file_path, 'r') as file:\n        contents = file.read()\n        print(contents)\nexcept FileNotFoundError:\n    print(f"The file at {file_path} does not exist.")\nexcept Exception as e:\n    print(f"An error occurred: {e}")
import os\n\ndef read_file_from_safe_directory(filename):\n    safe_directory = '/safe/'\n    file_path = os.path.join(safe_directory, filename)\n    \n    try:\n        with open(file_path, 'r') as file:\n            content = file.read()\n        return content\n    except FileNotFoundError:\n        return "Error: File not found."\n    except IOError:\n        return "Error: An error occurred while reading the file."\n\n# Example usage\nfilename = 'example.txt'\nfile_content = read_file_from_safe_directory(filename)\nprint(file_content)
import os\n\ndef read_file_from_safe_directory(safe_directory, filename):\n    # Ensure the safe directory is an absolute path\n    safe_directory = os.path.abspath(safe_directory)\n    \n    # Construct the full file path\n    file_path = os.path.join(safe_directory, filename)\n    \n    # Check if the file path is within the safe directory\n    if not file_path.startswith(safe_directory):\n        raise ValueError("Attempt to access a file outside the safe directory")\n    \n    try:\n        with open(file_path, 'r') as file:\n            content = file.read()\n        return content\n    except FileNotFoundError:\n        return "File not found"\n    except Exception as e:\n        return f"An error occurred: {e}"\n\n# Example usage\nsafe_directory = "/path/to/safe/directory"\nfilename = "example.txt"\nprint(read_file_from_safe_directory(safe_directory, filename))
from flask import Flask, send_file, request\n\napp = Flask(__name__)\n\n@app.route('/img')\ndef img():\n    name = request.args.get('name')\n    file_path = f'images/{name}'\n    return send_file(file_path)\n\nif __name__ == '__main__':\n    app.run(debug=True)
from flask import Flask, send_from_directory, abort\nimport os\n\napp = Flask(__name__)\n\n@app.route('/images/<filename>')\ndef get_image(filename):\n    images_folder = 'images'\n    file_path = os.path.join(images_folder, filename)\n    \n    if os.path.exists(file_path):\n        return send_from_directory(images_folder, filename)\n    else:\n        return abort(404)\n\nif __name__ == '__main__':\n    app.run(debug=True)
from flask import Flask, request, send_file\n\napp = Flask(__name__)\n\n@app.route('/img')\ndef img():\n    file_name = request.args.get('file')\n    if file_name:\n        try:\n            return send_file(file_name, mimetype='image/jpeg')\n        except FileNotFoundError:\n            return "File not found", 404\n    else:\n        return "No file specified", 400\n\nif __name__ == '__main__':\n    app.run(debug=True)
import tarfile\nimport os\n\n# Define the path to the archive file and the destination directory\narchive_path = 'archive.zip'\ndestination_dir = '/tmp/unpack'\n\n# Create the destination directory if it doesn't exist\nif not os.path.exists(destination_dir):\n    os.makedirs(destination_dir)\n\n# Open the archive file and extract all files to the destination directory\nwith tarfile.open(archive_path, 'r:gz') as archive:\n    archive.extractall(path=destination_dir)
import tarfile\nimport os\n\n# Define the path to the archive and the extraction directory\narchive_path = 'archive.zip'\nextract_dir = '/tmp/unpack'\n\n# Create the extraction directory if it doesn't exist\nif not os.path.exists(extract_dir):\n    os.makedirs(extract_dir)\n\n# Open the archive file and extract all files\nwith tarfile.open(archive_path, 'r:gz') as archive:\n    archive.extractall(path=extract_dir)\n\nprint(f"All files extracted to {extract_dir}")
import tarfile\n\n# Define the file paths\ntar_file_path = 'example.tar.gz'\nextract_path = 'extracted_files'\n\n# Use the with statement to open the tar file\nwith tarfile.open(tar_file_path, 'r:gz') as tar:\n    # Extract all the contents of the tar file\n    tar.extractall(path=extract_path)\n\n# Use the with statement to open a file for writing\nwith open('example.txt', 'w') as file:\n    file.write('This is an example text file.')
